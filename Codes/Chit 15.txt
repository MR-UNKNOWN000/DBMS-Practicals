-- Create the Emp table
CREATE TABLE Emp (
    EmployeeID INT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Age INT,
    DepartmentID INT,
    Salary DECIMAL(10, 2)
);

-- Create the Department table
CREATE TABLE Department (
    DepartmentID INT PRIMARY KEY,
    DepartmentName VARCHAR(50),
    ManagerID INT
);

-- Create the Orders table
CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    CustomerID INT,
    OrderDate DATE,
    ShippedDate DATE,
    Status VARCHAR(20)
);

-- Create the Customers table
CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Age INT
);

-- Create the Products table
CREATE TABLE Products (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(50),
    Category VARCHAR(50),
    Price DECIMAL(10, 2)
);

-- Insert 5 records into Emp table
INSERT ALL
  INTO Emp (EmployeeID, FirstName, LastName, Age, DepartmentID, Salary) VALUES (101, 'John', 'Doe', 30, 2, 60000)
  INTO Emp (EmployeeID, FirstName, LastName, Age, DepartmentID, Salary) VALUES (102, 'Jane', 'Smith', 28, 3, 65000)
  INTO Emp (EmployeeID, FirstName, LastName, Age, DepartmentID, Salary) VALUES (103, 'Sam', 'Johnson', 35, 2, 70000)
  INTO Emp (EmployeeID, FirstName, LastName, Age, DepartmentID, Salary) VALUES (104, 'Linda', 'White', 40, 4, 75000)
  INTO Emp (EmployeeID, FirstName, LastName, Age, DepartmentID, Salary) VALUES (105, 'Mike', 'Davis', 45, 3, 80000)
SELECT * FROM dual;

-- Insert 5 records into Department table
INSERT ALL
  INTO Department (DepartmentID, DepartmentName, ManagerID) VALUES (1, 'HR', 104)
  INTO Department (DepartmentID, DepartmentName, ManagerID) VALUES (2, 'Sales', 105)
  INTO Department (DepartmentID, DepartmentName, ManagerID) VALUES (3, 'Marketing', 102)
  INTO Department (DepartmentID, DepartmentName, ManagerID) VALUES (4, 'IT', 103)
SELECT * FROM dual;

-- Insert 5 records into Customers table
INSERT ALL
  INTO Customers (CustomerID, FirstName, LastName, Age) VALUES (1, 'Alice', 'Brown', 25)
  INTO Customers (CustomerID, FirstName, LastName, Age) VALUES (2, 'Bob', 'Green', 30)
  INTO Customers (CustomerID, FirstName, LastName, Age) VALUES (3, 'Charlie', 'Blue', 35)
  INTO Customers (CustomerID, FirstName, LastName, Age) VALUES (4, 'David', 'Black', 40)
  INTO Customers (CustomerID, FirstName, LastName, Age) VALUES (5, 'Eve', 'Gray', 45)
SELECT * FROM dual;

-- Insert 5 records into Orders table
INSERT ALL
  INTO Orders (OrderID, CustomerID, OrderDate, ShippedDate, Status) VALUES (1, 1, TO_DATE('2024-09-15', 'YYYY-MM-DD'), NULL, 'Pending')
  INTO Orders (OrderID, CustomerID, OrderDate, ShippedDate, Status) VALUES (2, 2, TO_DATE('2024-10-01', 'YYYY-MM-DD'), NULL, 'Pending')
  INTO Orders (OrderID, CustomerID, OrderDate, ShippedDate, Status) VALUES (3, 3, TO_DATE('2024-09-25', 'YYYY-MM-DD'), NULL, 'Pending')
  INTO Orders (OrderID, CustomerID, OrderDate, ShippedDate, Status) VALUES (4, 4, TO_DATE('2024-08-10', 'YYYY-MM-DD'), NULL, 'Pending')
  INTO Orders (OrderID, CustomerID, OrderDate, ShippedDate, Status) VALUES (5, 5, TO_DATE('2024-09-30', 'YYYY-MM-DD'), NULL, 'Pending')
SELECT * FROM dual;

-- Insert 5 records into Products table
INSERT INTO Products (ProductID, ProductName, Category, Price)
VALUES
(1, 'Laptop', 'Electronics', 1000.00),
(2, 'Phone', 'Electronics', 500.00),
(3, 'Tablet', 'Electronics', 300.00),
(4, 'Chair', 'Furniture', 150.00),
(5, 'Desk', 'Furniture', 200.00);

-- 1. Update the salary of all employees in the Sales department by 10%.
UPDATE Emp
SET Salary = Salary * 1.10
WHERE DepartmentID = (SELECT DepartmentID FROM Department WHERE DepartmentName = 'Sales');

SELECT * FROM Emp WHERE DepartmentID = (SELECT DepartmentID FROM Department WHERE DepartmentName = 'Sales');


-- 2. Delete all orders placed before a certain date (e.g., '2024-09-01').
DELETE FROM Orders
WHERE OrderDate < TO_DATE('2024-09-01', 'YYYY-MM-DD');

SELECT * FROM Orders;

-- 3. Retrieve the names and ages of all customers who have made a purchase in the last month.
SELECT DISTINCT c.FirstName, c.LastName, c.Age
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
WHERE o.OrderDate >= ADD_MONTHS(CURRENT_DATE, -1);

-- 4. Increase the price of all products in the "Electronics" category by 5%.
UPDATE Products
SET Price = Price * 1.05
WHERE Category = 'Electronics';

SELECT * FROM Products WHERE Category = 'Electronics';

-- 5. Find the total number of products in each category.
SELECT Category, COUNT(*) AS TotalProducts
FROM Products
GROUP BY Category;

-- 6. Assign a new manager to a specific department (e.g., DepartmentID = 2).
UPDATE Department
SET ManagerID = 105
WHERE DepartmentID = 2;

SELECT * FROM Department WHERE DepartmentID = 2;

-- 7. Transfer an employee from one department to another (e.g., EmployeeID = 101 to DepartmentID = 3).
UPDATE Emp
SET DepartmentID = 3
WHERE EmployeeID = 101;

SELECT * FROM Emp WHERE EmployeeID = 101;

-- 8. Mark an order as shipped and update the shipped date (e.g., OrderID = 5001).
UPDATE Orders
SET Status = 'Shipped', ShippedDate = SYSDATE
WHERE OrderID = 5001;

SELECT * FROM Orders WHERE OrderID = 5001;

-- 9. Retrieve the highest salary among all employees.
SELECT MAX(Salary) AS HighestSalary
FROM Emp;
