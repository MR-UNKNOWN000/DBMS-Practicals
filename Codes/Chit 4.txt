create database library;

use library;

create table Borrower(Rollno int(4),Name varchar(20),DateofIssue date,NameofBook varchar(30),Status varchar(10));

insert into Borrower values(14,'Ram','2022-09-19','Operating System','I');

insert into Borrower values(27,'Soham','2022-07-24','Object Oriented Programming','I');

insert into Borrower values(34,'Mohan','2022-06-12','Microprocessor','I');

insert into Borrower values(48,'Om','2022-04-19','Mechanics','I');

select * from Borrower;

+--------+-------+-------------+-----------------------------+--------+
| Rollno | Name  | DateofIssue | NameofBook                  | Status |
+--------+-------+-------------+-----------------------------+--------+
|     14 | Ram   | 2022-09-19  | Operating System            | I      |
|     27 | Soham | 2022-07-24  | Object Oriented Programming | I      |
|     34 | Mohan | 2022-06-12  | Microprocessor              | I      |
|     48 | Om    | 2022-04-19  | Mechanics                   | I      |
+--------+-------+-------------+-----------------------------+--------+
4 rows in set (0.00 sec)

create table Fine(Rollno int(4),Date date,Amount int(10));

Empty set (0.00 sec)

desc Fine;
+--------+------+------+-----+---------+-------+
| Field  | Type | Null | Key | Default | Extra |
+--------+------+------+-----+---------+-------+
| Rollno | int  | YES  |     | NULL    |       |
| Date   | date | YES  |     | NULL    |       |
| Amount | int  | YES  |     | NULL    |       |
+--------+------+------+-----+---------+-------+
3 rows in set (0.00 sec)

delimiter //
create procedure calc_Fine(in r int(10),in b varchar(30))
begin
declare doi date;
declare diff int(3);
select DateofIssue into doi from Borrower where Rollno=r and NameofBook=b;
select datediff(curdate(),doi) into diff;
if diff>=15 and diff<=30 then
insert into Fine values(r,curdate(),diff*5);
end if;
if diff>30 then
insert into Fine values(r,curdate(),diff*50);
end if;
end//

delimiter //
create procedure submit(in r int(2))
begin
update Borrower set Status='R' where Rollno=r;
delete from Fine where Rollno=r;
end//

output:

call calc_Fine(14,'Operating System'); 

Query OK, 1 row affected (0.01 sec)

select * from Fine; 

+--------+------------+--------+
| Rollno | Date       | Amount |
+--------+------------+--------+
|     14 | 2024-11-06 |  38950 |
+--------+------------+--------+


call calc_Fine(27,'Object Oriented Programming'); 

Query OK, 1 row affected (0.01 sec)

call calc_Fine(34,'Microprocessor'); 

Query OK, 1 row affected (0.01 sec)

call calc_Fine(48,'Mechanics'); 

Query OK, 1 row affected (0.01 sec)

select * from Fine; 

+--------+------------+--------+
| Rollno | Date       | Amount |
+--------+------------+--------+|
|     14 | 2024-11-06 |  38950 |
|     27 | 2024-11-06 |  41800 |
|     34 | 2024-11-06 |  43900 |
|     48 | 2024-11-06 |  46600 |
+--------+------------+--------+
5 rows in set (0.00 sec)

call submit(14); 

Query OK, 1 row affected (0.01 sec)

call submit(27); 

Query OK, 1 row affected (0.01 sec)

call submit(48); 

Query OK, 1 row affected (0.01 sec)

call submit(34); 

Query OK, 1 row affected (0.01 sec)

select * from Fine; 

Empty set (0.00 sec)

select * from Borrower;

+--------+-------+-------------+-----------------------------+--------+
| Rollno | Name  | DateofIssue | NameofBook                  | Status |
+--------+-------+-------------+-----------------------------+--------+
|     14 | Ram   | 2022-09-19  | Operating System            | R      |
|     27 | Soham | 2022-07-24  | Object Oriented Programming | R      |
|     34 | Mohan | 2022-06-12  | Microprocessor              | R      |
|     48 | Om    | 2022-04-19  | Mechanics                   | R      |
+--------+-------+-------------+-----------------------------+--------+
4 rows in set (0.00 sec)



 

########oracle 10g #############


-- Assume the schema is already created, no need to CREATE DATABASE in Oracle

-- Create Borrower table
CREATE TABLE Borrower (
    Rollno NUMBER(4),
    Name VARCHAR2(20),
    DateofIssue DATE,
    NameofBook VARCHAR2(30),
    Status VARCHAR2(10)
);

-- Insert values into Borrower table
INSERT INTO Borrower VALUES(14, 'Ram', TO_DATE('2022-09-19', 'YYYY-MM-DD'), 'Operating System', 'I');
INSERT INTO Borrower VALUES(27, 'Soham', TO_DATE('2022-07-24', 'YYYY-MM-DD'), 'Object Oriented Programming', 'I');
INSERT INTO Borrower VALUES(34, 'Mohan', TO_DATE('2022-06-12', 'YYYY-MM-DD'), 'Microprocessor', 'I');
INSERT INTO Borrower VALUES(48, 'Om', TO_DATE('2022-04-19', 'YYYY-MM-DD'), 'Mechanics', 'I');

-- Create Fine table
CREATE TABLE Fine (
    Rollno NUMBER(4),
    Date DATE,
    Amount NUMBER(10)
);

-- Create stored procedure to calculate fines
CREATE OR REPLACE PROCEDURE calc_Fine(r IN NUMBER, b IN VARCHAR2) IS
    doi DATE;
    diff NUMBER;
BEGIN
    -- Fetch DateofIssue for the given Rollno and NameofBook
    SELECT DateofIssue INTO doi 
    FROM Borrower 
    WHERE Rollno = r AND NameofBook = b;

    -- Calculate the difference in days between current date and DateofIssue
    diff := TRUNC(SYSDATE) - doi;

    -- Insert fine based on the difference in days
    IF diff >= 15 AND diff <= 30 THEN
        INSERT INTO Fine (Rollno, Date, Amount) 
        VALUES (r, SYSDATE, diff * 5);
    ELSIF diff > 30 THEN
        INSERT INTO Fine (Rollno, Date, Amount) 
        VALUES (r, SYSDATE, diff * 50);
    END IF;
END;
/

-- Create stored procedure to submit books and clear fines
CREATE OR REPLACE PROCEDURE submit(r IN NUMBER) IS
BEGIN
    -- Update the status to 'R' (Returned)
    UPDATE Borrower 
    SET Status = 'R' 
    WHERE Rollno = r;

    -- Delete any fines for the given Rollno
    DELETE FROM Fine WHERE Rollno = r;
END;
/

-- Execute stored procedure to calculate fines for specific books
EXEC calc_Fine(14, 'Operating System');
EXEC calc_Fine(27, 'Object Oriented Programming');
EXEC calc_Fine(34, 'Microprocessor');
EXEC calc_Fine(48, 'Mechanics');

-- Check the fines table after calculations
SELECT * FROM Fine;

-- Execute stored procedure to submit books and clear fines
EXEC submit(14);
EXEC submit(27);
EXEC submit(34);
EXEC submit(48);

-- Check the Borrower table after submission to see updated status
SELECT * FROM Borrower;
