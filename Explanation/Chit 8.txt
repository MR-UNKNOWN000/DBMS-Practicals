Chit No. 8 : Database Trigger (All Types: Row level and Statement level triggers, Before and After Triggers).
Write a database trigger on Library table. The System should keep track of the records that are being updated or deleted. The old value of updated or deleted records should be added in Library_Audit table.



Step-by-Step Algorithm
Create Library Table:

Purpose: This table holds information about books in the library.
Columns:
book_id: Primary key to uniquely identify each book.
title: The title of the book.
author: The author of the book.
published_year: The year the book was published.
Create Library_Audit Table:

Purpose: This table tracks changes (update or delete) made to the Library table. It stores old data before a change occurs.
Columns:
audit_id: A unique identifier for each audit record, auto-generated by a sequence.
book_id: The ID of the book from the Library table.
title: The title of the book at the time of change.
author: The author of the book at the time of change.
published_year: The publication year at the time of change.
action: The type of action (UPDATE or DELETE).
action_date: The timestamp when the action was performed.
Create Sequence for audit_id:

Purpose: A sequence to automatically generate unique audit_id values for each audit record.
Steps:
Start the sequence with the value 1 and increment it by 1 each time.
Create Trigger for Auto-Generating audit_id:

Purpose: This trigger runs before inserting data into the Library_Audit table to auto-generate the audit_id field using the sequence.
Trigger Action:
Before an insert operation on the Library_Audit table, the trigger checks if audit_id is NULL and then assigns a new value from the sequence.
Create Trigger for Tracking UPDATE and DELETE Operations on Library Table:

Purpose: This trigger tracks updates and deletions made to the Library table and inserts a record into the Library_Audit table.
Trigger Action:
If a DELETE operation is performed on the Library table, the trigger inserts the old values (from the deleted record) into Library_Audit with an action labeled DELETE.
If an UPDATE operation is performed on the Library table, the trigger inserts the old values (from the updated record) into Library_Audit with an action labeled UPDATE.
Insert Sample Data into the Library Table:

Purpose: Insert initial book records into the Library table for testing purposes.
Steps:
Insert data for book_id = 1 and book_id = 2.
Verify Insertions:

Purpose: Check that the records were inserted successfully into the Library table.
Steps:
Run a SELECT query to fetch all records from the Library table.
Perform UPDATE and DELETE Operations:

Purpose: Perform update and delete actions to test if the triggers are working as expected.
Steps:
Update the title of the book with book_id = 1.
Delete the book with book_id = 2.
Verify Data in Library_Audit Table:

Purpose: Check the Library_Audit table to see if the triggers recorded the changes.
Steps:
Run a SELECT query to fetch all records from the Library_Audit table.
The table should show:
A record with the action UPDATE for book_id = 1.
A record with the action DELETE for book_id = 2.
Check Trigger Status:

Purpose: Verify that the triggers for the Library table are enabled and functioning.
Steps:
Run a query to check the status of the triggers associated with the Library table.
Pseudocode Representation of the Algorithm:
Create Tables:

Create Library table with columns (book_id, title, author, published_year).
Create Library_Audit table with columns (audit_id, book_id, title, author, published_year, action, action_date).
Create Sequence:

Create sequence audit_id_seq to generate unique audit_id.
Create Triggers:

Trigger to auto-generate audit_id before insert into Library_Audit.
Trigger to track UPDATE and DELETE on Library table and insert into Library_Audit.
Insert Sample Data:

Insert books into the Library table for testing.
Perform Operations:

Perform UPDATE and DELETE operations on the Library table.
Verify Audit Records:

Check the Library_Audit table to ensure the actions are recorded.
Verify Triggers:

Ensure that the triggers are enabled and functioning by checking their status.